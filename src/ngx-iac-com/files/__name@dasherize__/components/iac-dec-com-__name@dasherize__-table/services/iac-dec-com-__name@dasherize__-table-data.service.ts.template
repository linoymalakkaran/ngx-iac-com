import { HttpClient } from "@angular/common/http";
import { Injectable } from "@angular/core";
import { NgxUiLoaderService } from "ngx-ui-loader";
import { BehaviorSubject } from "rxjs";
import { IacDecCom<%=classify(name)%>ApiConfig } from "../../../configs/iac-dec-com-<%=name%>-api.config";
import { AtlpRichClassicTableEmitElInfoTable } from "projects/atlp-table/src/lib/models/atlp-rich-classic-table-interfaces";
import { IacDecComCommonService } from "../../../../shared/services/iac-dec-com-common.service";
import {
  IacDecComTableObjViewModel,
  IacDecComTableListRequestModel,
} from "../../../../shared/models/iac-dec-com-table-list-models/iac-dec-com-table-list.models";


@Injectable({
  providedIn: "root",
})
export class IacDecCom<%=classify(name)%>TableDataService {
  COM_<%=underscore(name).toUpperCase() %>_TABLE_DATA: IacDecComTableObjViewModel[] = [];
  COM_<%=underscore(name).toUpperCase() %>_TABLE_DATA$: BehaviorSubject<IacDecComTableObjViewModel> =
    new BehaviorSubject<IacDecComTableObjViewModel>(null);
  public userSelectedInfo$: BehaviorSubject<AtlpRichClassicTableEmitElInfoTable> =
    new BehaviorSubject<AtlpRichClassicTableEmitElInfoTable>(null);
  totalCount: number = 0;

  constructor(
    public httpClient: HttpClient,
    public Com<%=classify(name)%>ApiConfig: IacDecCom<%=classify(name)%>ApiConfig,
    private ngxLoaderService: NgxUiLoaderService,
    private iacDecComCommonService: IacDecComCommonService
  ) {}

  async searchTableData(payload: IacDecComTableListRequestModel) {
    //initial loading fix with timeout
    setTimeout(() => {
      this.ngxLoaderService.start();
    }, 1000);

    try {
      let response: IacDecComTableObjViewModel = await new Promise(
        (resolve, reject) => {
          this.iacDecComCommonService.searchTableData(payload, resolve, reject);
        }
      );

      this.COM_<%=underscore(name).toUpperCase() %>_TABLE_DATA$.next({ ...response });
      return { ...response };
    } catch (error) {
      console.log("searchTableData for COM_GATE_PASS failed: => ", error);

      let mappedResponse: IacDecComTableObjViewModel = {
        iacDecComTableList: [],
        totalRecords: 0,
      };
      this.COM_<%=underscore(name).toUpperCase() %>_TABLE_DATA$.next(mappedResponse);
      return mappedResponse;
    }
  }
}
